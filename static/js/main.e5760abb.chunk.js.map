{"version":3,"sources":["redux/reducer.js","redux/types.js","store.js","components/layout/CartIcon.js","components/layout/NavbarComp.js","components/pages/Home.js","components/pages/CartItem.js","redux/actions.js","components/pages/Cart.js","components/pages/Product.js","components/pages/Products.js","components/pages/PageProduct.js","App.js","serviceWorker.js","index.js"],"names":["reducers","state","action","type","products","cart","product","quantity","filter","item","id","payload","middleware","thunk","store","createStore","localStorage","getItem","JSON","parse","loadState","composeWithDevTools","applyMiddleware","subscribe","getState","setItem","stringify","connect","totQuantity","reduce","total","parseInt","icon","faShoppingBag","size","className","NavbarComp","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","to","style","Home","deleteFromCart","Card","width","CardImg","src","image","height","CardBody","CardTitle","name","CardText","price","Button","faTrash","clearCard","dispatch","a","visible","setVisible","alert","setAlert","onDismiss","Alert","toggle","map","idx","Col","key","md","Product","addToCart","props","setProduct","setQuantity","useEffect","find","prod","findProduct","match","params","Row","alt","CardSubtitle","description","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","value","onChange","e","target","App","exact","path","component","Cart","Products","PageProduct","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5760abb.chunk.js","sourcesContent":["import {GET_PRODUCTS,ADD_TO_CART,DELETE_FROM_CART,CLEAR_CART} from './types'\n\nconst reducers = (state,action) => {\n    switch(action.type){\n        case GET_PRODUCTS : return{\n            ...state,\n            products: state  \n        }\n        case ADD_TO_CART : return{\n            ...state,\n            cart : [...state.cart,{\n                product : action.product,\n                quantity : action.quantity\n            }]\n        }\n        case DELETE_FROM_CART : return {\n            ...state,\n            cart: state.cart.filter(item => item.product.id !== action.payload),\n        }\n        case CLEAR_CART : return {\n            ...state,\n            cart: []\n        }\n        default : return state ;\n    }\n}\n\nexport default reducers;","export const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const DELETE_FROM_CART = 'DELETE_FROM_CART';\nexport const CLEAR_CART = 'CLEAR_CART';\n","import {createStore,applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducers from './redux/reducer'\n\n\nconst middleware = [thunk];\n\n function loadState(){\n  const state = localStorage.getItem('cart');\n  if(state !== null){\n    return JSON.parse(state)\n  }\n  return {\n      products : [\n          {\"id\" : 1,\"name\":\"Boots\" ,\"price\" : 70 ,\"image\" :\"https://images.unsplash.com/photo-1579828898622-446b9d65ff73?\" , \"description\" : \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus labore consectetur fugit excepturi tempora nihil similique eligend\"},\n          {\"id\" : 2,\"name\":\"Camera\" ,\"price\" : 274 ,\"image\" :\"https://images.unsplash.com/photo-1506770797561-3b22048d1a13\" , \"description\" : \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus labore consectetur fugit excepturi tempora nihil similique eligend\"},\n          {\"id\" : 3,\"name\":\"Tel\" ,\"price\" : 170 ,\"image\" :\"https://images.unsplash.com/photo-1520809171575-a3c6f94eda84\" , \"description\" : \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus labore consectetur fugit excepturi tempora nihil similique eligend\"},\n          {\"id\" : 4,\"name\":\"Gazouz\" ,\"price\" : 4 ,\"image\" :\" https://images.unsplash.com/photo-1502389743708-d00f658638bd?\" , \"description\" : \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus labore consectetur fugit excepturi tempora nihil similique eligend\"},\n      ],\n      cart : []\n  }\n}\n\n\nfunction saveState(state) {\n  localStorage.setItem('cart',JSON.stringify(state))\n}\n\nconst store = createStore(reducers,loadState(),\n  composeWithDevTools(\n    applyMiddleware(...middleware),\n  )\n);\n\nstore.subscribe(() => saveState(store.getState()))\n\nexport default store ;\n\n\n  ","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingBag } from '@fortawesome/free-solid-svg-icons'\nimport {connect} from 'react-redux'\n\nconst CartIcon = ({totQuantity}) => {\n    return (\n        <div>\n            <FontAwesomeIcon icon={faShoppingBag} size=\"lg\" />\n            <span className='badge badge-danger'>{totQuantity}</span>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        totQuantity : state.cart.reduce((total,item) => total + parseInt(item.quantity),0)\n    }\n}\nexport default  connect(mapStateToProps)(CartIcon)\n","import React,{useState} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n  } from 'reactstrap';\nimport CartIcon from './CartIcon';\n\n\n\nconst NavbarComp = () => {\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    return (\n        \n      <Navbar color=\"light\" light  expand=\"md\">\n        <div className=\"container\">\n        <NavbarBrand href=\"/\">StoreRed</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <Link className='nav-link' to=\"/\">Home</Link>\n            </NavItem>\n            <NavItem>\n              <Link  className='nav-link' to=\"/products\">Products</Link>\n            </NavItem>\n            <NavItem>\n              <Link  className='nav-link' to=\"/cart\">Cart</Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n        <Link  to=\"/cart\" style={{color : 'black'}}><CartIcon /></Link>\n        </div>\n      </Navbar>\n    )\n}\n\nexport default NavbarComp\n","import React from 'react'\n\nconst Home = () => {\n    return (\n        <h1 className=\"mt-5 pt-5 container\">\n            Welecome to Redux shoping Cart\n        </h1>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport {\n    Card, CardImg, CardText, CardBody, CardTitle, Button\n  } from 'reactstrap';\nimport { connect } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { deleteFromCart } from '../../redux/actions';\n\nconst CartItem = ({item,deleteFromCart}) => {\n\n    return (\n          <Card style={{width:'15rem'}}>\n            <CardImg  src={item.product.image} style={{height:'13rem'}}/>\n            <CardBody>\n              <CardTitle>{item.product.name}</CardTitle>\n              <CardText className='text-muted m-0'> Price : {item.product.price} DT</CardText>\n              <CardText className='text-muted m-0'> Quantity :{item.quantity}</CardText>\n              <CardText className='text-muted'> Total : {item.product.price * item.quantity} DT</CardText>\n              <Button className='btn btn-danger' onClick={() => deleteFromCart(item.product.id)  } >  <FontAwesomeIcon icon={faTrash} size=\"lg\" /></Button>        \n            </CardBody>\n          </Card>\n    )\n}\n\nexport default connect(null,{deleteFromCart})(CartItem)\n","import {GET_PRODUCTS,ADD_TO_CART,DELETE_FROM_CART, CLEAR_CART} from './types'\n\n\nexport const getProducts = () =>{\n    return {\n        type : GET_PRODUCTS,\n    }\n}\n\nexport const addToCart = (product,quantity) =>{\n    return {\n        type : ADD_TO_CART,\n        product,\n        quantity\n    }\n}\n\n\n\nexport const deleteFromCart = (id) =>{\n    return {\n        type : DELETE_FROM_CART,\n        payload : id \n    }\n}\n\n\n // With THUNK\n\nexport const clearCard = () => async dispatch => {\n        dispatch({\n            type: CLEAR_CART,\n        });\n\n}\n\n\n // Without THUNK\n// export const clearCard = () =>{\n//     return {\n//         type : CLEAR_CART\n//     }\n// }","import React, { useState } from 'react'\nimport {Col, Alert} from 'reactstrap'\nimport { connect } from 'react-redux'\nimport CartItem from './CartItem'\nimport { clearCard } from '../../redux/actions'\n\nconst Cart = ({cart,total,clearCard}) => {\n    const [visible, setVisible] = useState(false);\n    const [alert, setAlert] = useState(false);\n    \n    const onDismiss = () => setVisible(false);\n    \n    const placeOrder = () => {\n        if(!total){\n           return setAlert(true)\n        }\n        clearCard()\n        setVisible(true)\n    }\n    return (\n    <div className='container mt-5'>\n    <Alert color=\"primary\" isOpen={visible} toggle={onDismiss} >\n        We Recieved your order , and we are working on it . \n    </Alert>\n    <Alert color=\"danger\" isOpen={alert} toggle={onDismiss}>\n        Cart is empty\n    </Alert>\n        <h1 className='mb-4'>Cart</h1>\n        <div className=\"row\">\n                {cart.map((item,idx) => {\n                return(\n                <Col key={idx} md='4'> \n                    <CartItem item={item} />\n                </Col>\n                )\n                })}\n        </div>\n        <p className='mt-3 font-weight-bold'>Total : {total} DT</p>\n        <button className='btn btn-primary btn-block mb-4' onClick={placeOrder}> Place Order</button>\n\n   \n      \n    </div>\n    )\n}\nconst mapStateToProps = state => ({\n    cart : state.cart,\n    total : state.cart.reduce((total,item) => total + item.quantity*item.product.price,0)\n\n});\n\n\nexport default connect(mapStateToProps,{clearCard})(Cart)\n","import React from 'react'\nimport {\n    Card, CardImg, CardText, CardBody, CardTitle\n  } from 'reactstrap';\n\n  import  {Link} from 'react-router-dom'\nconst Product = ({product}) => {\n    return (\n          <Card >\n            <CardImg  src={product.image} style={{height: '30vh'}}/>\n            <CardBody>\n              <CardTitle>{product.name}</CardTitle>\n              <CardText className='text-muted'> Price :{product.price} DT</CardText>\n              <Link className='btn btn-primary' to={`/products/${product.id}`}>Details</Link>\n            </CardBody>\n          </Card>\n    )\n}\n\nexport default Product ;\n","import React from 'react'\nimport Product from './Product'\nimport {Col} from 'reactstrap'\nimport { connect } from 'react-redux'\n\nconst Products = ({products}) => {\n    \n    return (\n    <div className='container mt-5'>\n        <h1 className='mb-4'>Products</h1>\n        <div className=\"row\">\n                {products.map((product,idx) => {\n                return(\n                <Col key={idx} md='4'> \n                    <Product product={product} />\n                </Col>\n                )\n                })}\n        </div>\n    </div>\n    )\n}\nconst mapStateToProps = state => ({\n    products : state.products\n});\n\nexport default connect(mapStateToProps)(Products)\n","import React,{useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { useState } from 'react';\nimport { addToCart } from '../../redux/actions'\nimport {Card,CardBody, CardText,CardSubtitle,CardImg, Row,Col,Input,InputGroup,InputGroupAddon,InputGroupText, Button} from 'reactstrap'\n\nconst PageProduct = (props) => {\nconst [product, setProduct] = useState()\nconst [quantity, setQuantity] = useState(1)\n   \n\n\nuseEffect(() => {\n    const findProduct = async (id) => {\n        const products = props.products ;\n        const prod = await products.find(item => item.id === id);\n            setProduct(prod)\n    }\n    findProduct(props.match.params.id)\n}, [props.match.params.id,props.products]);\n\nconst handleQuantity = (e) => {\n    setQuantity(e.target.value)\n}\n\nconst addToCart = () => {\n props.addToCart(product,quantity)   \n}\n\n    return (\n        <div className='container mt-5'>\n            <h1 className='mb-4'>{product && product.name} </h1>\n                <Card>\n                <Row>\n\n                    <Col md='4'>\n                        <CardImg  src={product && product.image} alt=\"Card image cap\" />\n                    </Col>\n                    <Col md='7'>\n                        <CardBody className='mt-5'>\n                        <CardSubtitle>{product && product.description}</CardSubtitle>\n\n                        <InputGroup>\n                            <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>Quantite</InputGroupText>\n                            </InputGroupAddon>\n                            <Input type='number' value={quantity} onChange={handleQuantity}/>\n                        </InputGroup>\n                        <CardText className='font-weight-bold mt-3'> TOTAL : <span>{product && product.price*quantity} DT</span></CardText>\n                        <Button className='mt-2' onClick={addToCart}>Add To Card</Button>\n\n                        </CardBody>\n                    </Col>\n                    </Row>\n                </Card>\n \n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    products : state.products\n});\n\nexport default connect(mapStateToProps,{addToCart})(PageProduct)\n","import React from 'react';\nimport  {Route,Switch,BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport NavbarComp  from './components/layout/NavbarComp';\nimport Home from './components/pages/Home';\nimport Cart from './components/pages/Cart';\nimport Products from './components/pages/Products';\nimport PageProduct from './components/pages/PageProduct';\nfunction App() {\n  return (\n      <Provider store={store}>\n        <BrowserRouter>\n        <NavbarComp />\n          <Switch>\n            <Route exact path='/' component={Home} /> \n            <Route  path='/cart' component={Cart} /> \n            <Route exact path='/products' component={Products} /> \n            <Route  path='/products/:id' component={PageProduct} /> \n          </Switch>\n        </BrowserRouter>\n      </Provider> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}